#!/usr/bin/python2
# Copyright (C) 2014  Red Hat
# see file 'COPYING' for use and warranty information
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
from __future__ import print_function

import os
import sys

from setuptools.command.egg_info import egg_info as setuptools_egg_info


class egg_info(setuptools_egg_info):
    def initialize_options(self):
        setuptools_egg_info.initialize_options(self)
        self.build_base = None

    def finalize_options(self):
        setuptools_egg_info.finalize_options(self)
        # set self.build_base from build.build_base
        self.set_undefined_options(
            'build',
            ('build_base', 'build_base'))
        # egg-info directories are stored in project root
        # /ipaplatform/build/../.. == /
        toplevel = os.path.join(self.build_base, os.pardir, os.pardir)
        self.egg_base = os.path.relpath(toplevel)
        self.egg_info = os.path.join(self.egg_base,
                                     os.path.basename(self.egg_info))


common_args = dict(
    version="__VERSION__",
    license="GPL",
    author="FreeIPA Developers",
    author_email="freeipa-devel@redhat.com",
    maintainer="FreeIPA Developers",
    maintainer_email="freeipa-devel@redhat.com",
    url="http://www.freeipa.org/",
    download_url="http://www.freeipa.org/page/Downloads",
    cmdclass={
        "egg_info": egg_info,
    },
    platforms=["Linux", "Solaris", "Unix"],
    classifiers=[
        "Development Status :: 5 - Production/Stable",
        ("Topic :: System :: Systems Administration :: "
         "Authentication/Directory :: LDAP"),
        "Topic :: Internet :: Name Service (DNS)",
        "Intended Audience :: System Environment/Base",
        "License :: GPL",
        "Programming Language :: Python",
        "Operating System :: POSIX",
        "Operating System :: Unix",
    ],
)

local_path = os.path.dirname(os.path.abspath(sys.argv[0]))
old_path = os.path.abspath(os.getcwd())


def ipasetup(name, doc, setupfile, **kwargs):
    doclines = doc.split("\n")
    package_root = os.path.abspath(os.path.dirname(setupfile))

    setup_kwargs = common_args.copy()
    setup_kwargs.update(
        name=name,
        description=doclines[0],
        long_description="\n".join(doclines[:2]),
        package_dir={name: package_root},
        **kwargs
    )
    # exclude setup helpers from getting installed
    epd = setup_kwargs.setdefault('exclude_package_data', {})
    epd.setdefault('', []).extend(['*/setup.py', '*/ipasetup.py'])

    os.chdir(local_path)
    try:
        # BEFORE importing distutils, remove MANIFEST. distutils doesn't
        # properly update it when the contents of directories change.
        if os.path.isfile('MANIFEST'):
            os.unlink('MANIFEST')
        from setuptools import setup
        return setup(**setup_kwargs)
    finally:
        os.chdir(old_path)
