parameters:
  imageName: 'freeipa-azure-builder:latest'
  envs:
  - env1:
    id: '1'
    testsToIgnore: []
    testsToRun: []
    testsToDedicate: []
    topology:
      replicas: 0
      clients: 0

steps:
- script: |
    set -e
    echo '{ "ipv6": true, "fixed-cidr-v6": "2001:db8::/64" }' > docker-daemon.json
    sudo mkdir -p /etc/docker
    sudo cp docker-daemon.json /etc/docker/daemon.json
    sudo chown root:root /etc/docker/daemon.json
    sudo systemctl restart docker
    sudo modprobe ip6_tables
    sudo modprobe {nfs,nfsd}
    python3 -m pip install docker --user
  displayName: Configure containerization to allow IPv6 network
- task: DownloadPipelineArtifact@0
  displayName: Download prebuilt packages
  inputs:
    artifactName: 'packages-$(Build.BuildId)-$(Agent.OS)-$(Agent.OSArchitecture)'
    targetPath: $(Agent.BuildDirectory)/s/dist
- task: DownloadPipelineArtifact@0
  displayName: Download pre-built container
  inputs:
    artifactName: 'image-$(Build.BuildId)-$(Agent.OS)-$(Agent.OSArchitecture)'
    targetPath: $(Agent.BuildDirectory)/s
- script: |
    set -e
    docker load --input $(Agent.BuildDirectory)/s/freeipa-azure-builder-container.tar.gz
    docker images
    docker inspect freeipa-azure-builder:latest
  displayName: Import pre-built container to the engine

- ${{ each _env in parameters.envs }}:
  - script: |
      set -ex
      project="${{ _env.id }}"
      cont_dirname="container_$project"
      rm -rf "$cont_dirname"
      mkdir -p "$cont_dirname"/exports
      ln -sfr ipatests/azure/docker-compose.yml "$cont_dirname"/
      touch "$cont_dirname"/ipa-test-config.yaml
      cd "$cont_dirname"
      export IPA_DOCKER_IMAGE="${{ parameters.imageName }}"
      export IPA_NETWORK=ipanet
      export IPA_IPV6_SUBNET="2001:db8:1:$project::/64"
      docker-compose -p "$project" up -d \
          --scale replica="${{ _env.topology.replicas }}" \
          --scale client="${{ _env.topology.clients }}" \
          --force-recreate --remove-orphans
    displayName: Create and start containers environment:'${{ _env.id }}' for running tests

- ${{ each _env in parameters.envs }}:
  - script: |
      set -ex
      ln -sfr ipatests/azure/templates ./
      ln -sfr ipatests/azure/setup_containers.py ./
      project="${{ _env.id }}"
      export IPA_CONT_PREFIX="$project"
      export IPA_CLIENT_NUM="${{ _env.topology.clients }}"
      export IPA_REPLICA_NUM="${{ _env.topology.replicas }}"
      python3 setup_containers.py
    displayName: Setup containers environment:'${{ _env.id }}' for running tests
